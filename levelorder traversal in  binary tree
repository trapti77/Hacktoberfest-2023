#include<iostream>
#include<queue>
using namespace std;
class node{
    public:
    int data;
    node*left;
    node*right;
  node(int val)
  {
    this->data=val;
    this->left=NULL;
    this->right=NULL;
  }
};
node*buildtree(node*root)
{
    cout<<"enter the node data:"<<endl;
    int data;
    cin>>data;
   root=new node(data);
   if(data==-1)
   {
    return NULL;
   }
   cout<<" enter data for left node :"<<endl;
   root->left=buildtree(root->left);
   cout<<" enter data for right node :"<<endl;
   root->right=buildtree(root->right);
   return root;
}
void levelordertraversal(node*root)
{
queue<node*>q;
q.push(root);

while(!q.empty())
{
node*temp=q.front();
cout<<temp->data<<" ";
q.pop();
    if(temp->left!=NULL)
    {
q.push(temp->left);
    }
    if(temp->right!=NULL)
    {
q.push(temp->right);
    }
}
}
int main()
{
node*root;
root=buildtree(root);
levelordertraversal(root);
    return 0;
}
